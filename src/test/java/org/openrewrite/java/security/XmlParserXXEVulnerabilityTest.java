/*
 * Copyright 2021 the original author or authors.
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * https://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.openrewrite.java.security;

import org.junit.jupiter.api.Test;
import org.openrewrite.test.RecipeSpec;
import org.openrewrite.test.RewriteTest;

import static org.openrewrite.java.Assertions.java;

class XmlParserXXEVulnerabilityTest implements RewriteTest {
    @Override
    public void defaults(RecipeSpec spec) {
        spec.recipe(new XmlParserXXEVulnerability());
    }

    @Test
    void factoryIsNotVulnerable() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.stream.XMLInputFactory;
              import javax.xml.stream.XMLStreamReader;
              import java.io.InputStream;
              public class MyXmlReader {
                  public void parseXML(InputStream input) {
                      XMLInputFactory factory = XMLInputFactory.newFactory();
                      factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);
                      factory.setProperty(XMLInputFactory.SUPPORT_DTD, false);
                      XMLStreamReader reader = factory.createXMLStreamReader(input);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsNotVulnerableClassBlockInitialization() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.stream.XMLInputFactory;
              import javax.xml.stream.XMLStreamReader;
              import java.io.InputStream;
              public class MyXmlReader {
                  XMLInputFactory factory = XMLInputFactory.newFactory();
                  {
                      factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);
                      factory.setProperty(XMLInputFactory.SUPPORT_DTD, false);
                  }
                  public void parseXML(InputStream input) {
                      XMLStreamReader reader = factory.createXMLStreamReader(input);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableWithMethodInitialization() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.stream.XMLInputFactory;
              import javax.xml.stream.XMLStreamReader;
              import java.io.InputStream;
              public class MyXmlReader {
                  public void parseXML(InputStream input) {
                      XMLInputFactory f = XMLInputFactory.newFactory();
                      XMLStreamReader reader = f.createXMLStreamReader(input);
                  }
              }
              """,
            """
              import javax.xml.stream.XMLInputFactory;
              import javax.xml.stream.XMLStreamReader;
              import java.io.InputStream;
              public class MyXmlReader {
                  public void parseXML(InputStream input) {
                      XMLInputFactory f = XMLInputFactory.newFactory();
                      f.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);
                      f.setProperty(XMLInputFactory.SUPPORT_DTD, false);
                      XMLStreamReader reader = f.createXMLStreamReader(input);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryConstructorInitialization() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.stream.XMLInputFactory;
              public class MyXmlReader {
                  private XMLInputFactory f;
                  public MyXmlReader() {
                      f = XMLInputFactory.newFactory();
                      f.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);
                  }
              }
              """,
            """
              import javax.xml.stream.XMLInputFactory;
              public class MyXmlReader {
                  private XMLInputFactory f;
                  public MyXmlReader() {
                      f = XMLInputFactory.newFactory();
                      f.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);
                      f.setProperty(XMLInputFactory.SUPPORT_DTD, false);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryIsVulnerableWithClassBlockInitialization() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.stream.XMLInputFactory;
              import javax.xml.stream.XMLStreamReader;
              import java.io.InputStream;
              public class MyXmlReader {
                  XMLInputFactory factory = XMLInputFactory.newFactory();
                  public void parseXML(InputStream input) {
                      XMLStreamReader reader = factory.createXMLStreamReader(input);
                  }
              }
              """,
            """
              import javax.xml.stream.XMLInputFactory;
              import javax.xml.stream.XMLStreamReader;
              import java.io.InputStream;
              public class MyXmlReader {
                  XMLInputFactory factory = XMLInputFactory.newFactory();

                  {
                      factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);
                      factory.setProperty(XMLInputFactory.SUPPORT_DTD, false);
                  }
                  public void parseXML(InputStream input) {
                      XMLStreamReader reader = factory.createXMLStreamReader(input);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryNeedsDtdWithClassBlockInitialization() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.stream.XMLInputFactory;
              import javax.xml.stream.XMLStreamReader;
              import java.io.InputStream;
              public class MyXmlReader {
                  XMLInputFactory factory = XMLInputFactory.newFactory();

                  {
                      factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);
                  }
                  public void parseXML(InputStream input) {
                      XMLStreamReader reader = factory.createXMLStreamReader(input);
                  }
              }
              """,
            """
              import javax.xml.stream.XMLInputFactory;
              import javax.xml.stream.XMLStreamReader;
              import java.io.InputStream;
              public class MyXmlReader {
                  XMLInputFactory factory = XMLInputFactory.newFactory();

                  {
                      factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);
                      factory.setProperty(XMLInputFactory.SUPPORT_DTD, false);
                  }
                  public void parseXML(InputStream input) {
                      XMLStreamReader reader = factory.createXMLStreamReader(input);
                  }
              }
              """
          )
        );
    }

    @Test
    void factoryExternalWithClassBlockInitialization() {
        //language=java
        rewriteRun(
          java(
            """
              import javax.xml.stream.XMLInputFactory;
              import javax.xml.stream.XMLStreamReader;
              import java.io.InputStream;
              public class MyXmlReader {
                  XMLInputFactory factory = XMLInputFactory.newFactory();

                  {
                      factory.setProperty(XMLInputFactory.SUPPORT_DTD, false);
                  }
                  public void parseXML(InputStream input) {
                      XMLStreamReader reader = factory.createXMLStreamReader(input);
                  }
              }
              """,
            """
              import javax.xml.stream.XMLInputFactory;
              import javax.xml.stream.XMLStreamReader;
              import java.io.InputStream;
              public class MyXmlReader {
                  XMLInputFactory factory = XMLInputFactory.newFactory();

                  {
                      factory.setProperty(XMLInputFactory.SUPPORT_DTD, false);
                      factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);
                  }
                  public void parseXML(InputStream input) {
                      XMLStreamReader reader = factory.createXMLStreamReader(input);
                  }
              }
              """
          )
        );
    }
}
